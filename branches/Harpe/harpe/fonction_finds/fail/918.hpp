/*
*	date: 08-04-2013 11:09
*	score: 918
*	size: 1365
*	generation: 4069
*/
#include <math.h>
double calc_score(const double* const vals)
{
	double res=(((((((((((vals[1])-(vals[4]))*((0.70331)*(vals[8])))*(((vals[2])-(((0.439073)+((vals[0])-(0.68429)))-(((0.605116)+(vals[3]))-(0.581375))))/((vals[4])+(0.156096))))+(((0.863226)+((vals[2])/(vals[0])))-((((0.503855)/((0.436552)+(vals[2])))+((0.0653149)*((vals[3])/(vals[8]))))+((((vals[6])-(vals[5]))*(1.8208))/(((vals[9])/(vals[7]))-((vals[9])+(0.206387)))))))-(0.215339))+(((((vals[6])/(sin(vals[8])))*(((0.628603)/(vals[8]))+((vals[2])*(0.102437))))-(((0.896046)-(vals[6]))/(((((vals[4])+(vals[4]))*((vals[8])*(vals[2])))+(0.482092))/(((0.558072)-((0.203299)-(vals[9])))/(((0.915212)-(vals[2]))/((0.0792595)*(vals[4])))))))+(0.0956244)))-((((sin(((sin((2.78307)-((0.54174)-(sin(vals[0])))))*(0.190598))/(((((sin((0.493531)-(vals[2])))/((0.000948454)-(sin(vals[7]))))-((((vals[9])/(0.991124))-((0.743909)-(vals[1])))-(((vals[0])/(0.0425735))-((sin(sin((0.135057)*(vals[8]))))/((0.906244)-(((0.80661)*(vals[7]))*(0.794998)))))))*((vals[4])+(sin((vals[5])*(vals[0])))))*(vals[0]))))+((((0.23774)*(vals[9]))+(0.894208))/(((((vals[9])-(0.673851))*(0.0155207))-(sin((0.515606)/(sin((((vals[9])+(vals[1]))*((0.0310433)*(vals[1])))/(vals[7]))))))*(sin((sin(sin(((vals[2])*(sin(((vals[2])-((0.33841)*(vals[1])))+(((vals[1])*(0.785705))+((vals[6])-(0.636261))))))+(((((vals[6])*(vals[6]))/((0.146289)*(vals[2])))*(((vals[5])/(0.0722951))+(0.362187)))-((((vals[8])+(0.168533))/(0.0748618))/(((0.3062)-(vals[9]))-((vals[7])/(0.421391))))))))+((0.941049)/(vals[9])))))))-(((vals[0])/(0.76248))-((((((sin(((sin((((vals[0])*(0.908532))+((vals[3])-(0.750498)))-(0.137101)))*((((sin(vals[5]))/((vals[9])*(0.800571)))/((vals[2])+(0.309057)))+(sin((0.371393)-((vals[1])-(0.71047))))))*((sin((((sin((1.1288)*(vals[9])))-((vals[8])-((((sin(vals[2]))-(((0.220167)*(vals[0]))/((vals[6])-(((0.0893214)-((0.559079)+((vals[3])*(0.047566))))+((((((vals[3])+(vals[3]))-(0.629001))+(0.506906))+((sin((0.0123396)*(vals[6])))-((sin(vals[1]))*(-0.0866571))))+(vals[9]))))))/(((sin(vals[1]))*((vals[0])-(0.842631)))*(0.522414)))*((((vals[1])*(0.89971))+((vals[7])-(vals[1])))-(0.697418)))))+((vals[1])+(vals[8])))-(((0.961221)/(vals[1]))+(0.83686))))+((vals[8])-(vals[3])))))+(0.184951))-(0.5122))+(((vals[8])/(vals[2]))+(vals[7])))*(((((vals[4])+(vals[9]))+((((sin(sin((sin(vals[2]))+((0.314387)*(vals[7])))))-((vals[6])*(0.344282)))/(sin(((sin((0.248513)+(vals[2])))-((vals[2])-(vals[1])))+((sin(vals[3]))-(vals[9])))))/(((0.875627)*((vals[4])/(0.491721)))+(((((((vals[4])+(0.994291))*((vals[3])+(vals[7])))-(((((0.912566)-((sin(vals[3]))*((vals[9])-(vals[5]))))/((sin((0.329491)-(vals[2])))+(((vals[7])*(vals[4]))+(19.8831))))+(0.496646))/((vals[4])-(0.28107))))*((((vals[2])/(0.379428))+(0.791164))*((0.549443)/((vals[8])*(vals[6])))))/(vals[8]))-((sin((0.200977)*(((0.103096)*((((((vals[3])/(vals[9]))/((0.285314)/(vals[3])))*(sin((vals[3])/(vals[5]))))-(((0.509055)+((vals[2])*(vals[8])))/((0.168876)/((vals[6])+(0.226545)))))+(((((sin((1.59457)-((vals[7])/(vals[3]))))*(sin((0.407989)*((((0.355016)/((vals[6])-(0.875089)))/(1.39697))*((vals[5])*(sin((0.941693)+(vals[8]))))))))/(0.268485))/(((((-0.396712)*((vals[5])*(vals[8])))+(sin((vals[7])*(vals[5]))))*(((0.805483)/((0.653365)/(vals[4])))+(((0.270002)/(vals[9]))*((vals[2])-(0.880724)))))*(0.636132)))+(0.434184))))*(1.24309))))+((sin(((vals[6])/(((0.166594)+(vals[4]))/(sin(vals[3]))))-(sin((sin(vals[4]))+((vals[1])*(0.609813))))))*((((sin(vals[7]))-((sin(sin((vals[9])-(0.402147))))*(((((0.161508)+(vals[4]))-(sin(vals[0])))-(0.854323))-(((vals[0])+((vals[7])-(0.412102)))-((vals[0])+((0.33799)*(((1.08755)/(((0.366367)+(vals[7]))-((vals[6])+(vals[5]))))*(((0.663487)+((vals[7])-(0.4943)))+(0.109174)))))))))+((((((0.365173)/(((((vals[3])+(vals[5]))-((vals[7])/(vals[0])))+(sin(sin(vals[6]))))+(vals[6])))*(sin(sin(((vals[8])*(0.866519))*(sin(vals[3]))))))-((0.301593)/((vals[9])-(vals[1]))))/(((sin(vals[9]))+(sin(vals[8])))+(sin((vals[1])-(0.149679)))))/((((sin(((-0.915697)/((vals[3])+(vals[2])))+(((0.722308)-(vals[7]))-((0.229551)+(vals[5])))))-(vals[9]))/((((((vals[1])/(vals[0]))*((0.432366)*(vals[5])))-(((vals[9])*(vals[5]))*(vals[3])))+(((0.749973)*((0.457789)-(vals[6])))+(vals[7])))/(vals[8])))-(0.560468))))-(0.0724339))))))))+((0.47436)-(((-0.0787806)-((sin(vals[4]))-((vals[7])/(0.692337))))+(vals[1]))))+(((vals[7])+(0.232396))*((vals[6])/(0.328023)))))-(vals[2]))))-(0.542745)))*((vals[8])*((vals[6])/(vals[1]))))+(sin(sin((((0.986265)/(((((vals[3])*(0.0807812))/((vals[0])*(vals[3])))/(0.428393))+((((0.437233)*(vals[0]))-((vals[4])+(0.666773)))*((2.47691)/((vals[7])+(0.60409))))))*(15.5789))*(((((((0.169991)/(vals[7]))-((vals[3])-(0.242152)))+(((0.328247)*(vals[3]))-(14.0661)))*(((0.968629)+((vals[5])+(0.690667)))/(((0.662176)+(vals[9]))-(vals[8]))))-((((0.4832)*(((vals[0])*(sin((((vals[2])+(0.57766))-((vals[8])-(vals[4])))-((((sin((0.124551)*((((0.488162)+(vals[5]))+(sin(vals[5])))/(((vals[5])/(vals[7]))*((vals[5])*(0.270881))))))+(vals[1]))-(0.310858))-((vals[8])*(((((((0.0583491)/(sin(((0.703436)-((vals[1])*(0.544591)))/(vals[0]))))+(((vals[8])*(vals[5]))-((vals[9])*((vals[7])/(sin(((vals[7])*(vals[6]))-(-0.486632)))))))-(((sin((((0.0218841)-(vals[9]))-((0.498957)-(vals[6])))+(0.945684)))-((0.617636)-(sin((vals[9])*(vals[8])))))-((((0.103122)*(vals[3]))*((0.452838)-(vals[4])))*(sin(sin(vals[4]))))))*(((0.821004)+((0.571149)+(sin(vals[5]))))-((((vals[0])/(vals[0]))-(0.173793))*(-0.0847878))))*(0.233577))+(((sin((vals[4])-((((vals[5])+(0.415787))-((0.723977)*(vals[9])))+(0.939502))))*((((0.687284)-((vals[6])-(0.812394)))*(((0.502125)*(vals[9]))*((0.539306)-(vals[7]))))-((((0.327507)-(vals[4]))+(sin(vals[7])))*(((0.597244)+(vals[2]))-(sin(vals[2]))))))/(((vals[1])-(vals[0]))*(sin(vals[7]))))))))))/(0.386998)))*((((vals[9])*(vals[7]))-((vals[9])+(0.680137)))+(sin(vals[1]))))-((1.00017)-(vals[1]))))-(0.787736))))))+(((sin((vals[6])*((((sin(((sin((vals[4])*(vals[8])))-((sin(vals[5]))*((vals[2])*(vals[5]))))-(sin(sin((vals[1])-(0.510335))))))-((0.283891)+((((((0.468299)*((vals[7])/(0.194008)))-(((((vals[8])*(0.727997))*(vals[2]))*(vals[7]))+((sin((0.561611)+(vals[6])))*((sin(vals[7]))+(0.0117194)))))-((sin(vals[0]))/(0.0917496)))*(((vals[3])+(vals[0]))/((vals[6])+(0.807417))))-((((vals[9])*(sin(((vals[8])/(0.0192403))+(0.53657))))-(sin(vals[7])))+((0.0579769)/((vals[7])*(vals[6])))))))/(sin(((((0.879812)/(((vals[2])+(0.168346))*((vals[6])*(vals[0]))))-((sin((0.339516)-(((sin((0.310849)-(vals[9])))*(6.71221))-(sin(((vals[8])/(vals[1]))/((vals[9])/(0.121141)))))))*(((vals[5])*(vals[1]))-(0.354394))))*(sin(((0.583214)/(((sin((vals[6])-(0.219257)))-(((vals[1])-(0.711307))/(0.448678)))*((((0.662416)*(vals[5]))*(((((sin(vals[0]))/((vals[9])+(0.237588)))/(vals[3]))*((((vals[5])-(0.979379))/(sin(vals[9])))+((0.167856)-((vals[4])*(vals[8])))))/(0.75097)))-(((vals[9])/(0.801103))+(-0.639142)))))/(((vals[8])+(0.0590639))-(0.513335)))))+(((0.698267)-((((sin(vals[7]))-(0.0450098))/(((vals[4])/(vals[4]))*(sin(sin(((0.0393059)+(vals[7]))*(sin(vals[7])))))))/((0.278458)+(sin((vals[0])-(vals[6]))))))+(16.364)))))-(0.6948))))+((sin((((vals[5])/(vals[6]))*(0.316353))/(sin((vals[6])*(sin((((0.557163)-(vals[3]))-(-0.0104448))*(sin((0.0596972)-(vals[0])))))))))-(vals[5])))*(sin((((vals[3])*(vals[7]))+(1.57114))+((sin(vals[3]))/((vals[8])/(vals[5])))))))
	 return (res>0)?res:0;
}