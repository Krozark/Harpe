/*
*	date: 09-04-2013 00:37
*	score: 889
*	size: 634
*	generation: 4727
*/
#include <math.h>
double calc_score(const double* const vals)
{
	double res=(((((((((0.0478444)-(sin(vals[3])))-(1.48177))*((0.260861)+(((vals[9])+(0.802425))*(1.55754))))+((vals[4])+(0.0956244)))-((((sin((((sin((((0.829439)-((1.31878)/(((0.69812)*((((((0.926191)+(vals[9]))-(0.224553))-(((vals[7])*(0.497107))-(0.821445)))/(sin(sin((0.163068)-(vals[3])))))-(0.161753)))/(vals[6]))))/(sin(vals[0])))-(((vals[5])-(0.961453))*((vals[7])*(0.106113)))))+((((vals[5])/(vals[1]))+((0.240106)/(vals[5])))*((1.38111)-((0.280663)*(vals[4])))))*(0.190598))/(((((sin((0.493531)-(vals[2])))/((0.583478)-(sin(vals[7]))))-((((vals[9])/(0.991124))-((0.743909)-(vals[1])))-(((vals[0])/(0.0425735))-((sin(sin((0.135057)*(vals[8]))))/((0.906244)-(((0.80661)*(vals[7]))*(0.794998)))))))*((vals[4])+(sin((vals[5])*(vals[0])))))*(vals[0]))))+((((0.23774)*(vals[9]))+(0.894208))/(((((vals[9])-(0.673851))*(0.0155207))-(sin((0.515606)/(sin((((vals[9])+(vals[1]))*((0.0310433)*(vals[1])))/(vals[7]))))))*(sin((sin(sin(((vals[2])*(sin(((vals[2])-((0.33841)*(vals[1])))+(((vals[1])*(0.785705))+((vals[6])-(0.636261))))))+(((((vals[6])*(0.653011))/((0.146289)*(vals[2])))*(((vals[5])/(0.0722951))+(0.362187)))-((((vals[8])+(0.168533))/(0.0748618))/(((0.3062)-(vals[9]))-((vals[7])/(0.421391))))))))+((0.941049)/(vals[9])))))))-(((vals[0])/(0.76248))-((((((sin(((sin((((vals[0])*(0.908532))+((vals[3])-(0.750498)))-(sin((sin(sin(vals[5])))-(((vals[7])*(vals[8]))-(0.786846))))))*((((sin(vals[5]))/(sin(((0.174821)+((vals[2])-(vals[1])))-(sin((vals[8])*(vals[0]))))))/((vals[2])+(0.309057)))+(sin((0.371393)-((vals[1])-(0.71047))))))*((sin((((sin((1.1288)*(vals[9])))-((vals[8])-((((sin(vals[2]))-(((0.220167)*(vals[0]))/((vals[6])-((0.168533)+((((((vals[3])+(vals[3]))-(0.629001))+(0.506906))+((sin((0.0123396)*(vals[6])))-((sin(vals[1]))*(-0.0866571))))+(((0.82715)*(((vals[0])/(vals[2]))*(0.388587)))/(0.596726)))))))/(((sin(vals[1]))*((sin(((1.71481)*(sin(((sin(vals[2]))*((vals[0])+(vals[1])))*(0.0860775))))*((sin(vals[2]))/((0.494718)+(vals[4])))))-(0.842631)))*(0.522414)))*((((vals[1])*(0.89971))+((vals[7])-(vals[1])))-(0.697418)))))+((vals[1])+(vals[8])))-(((0.961221)/(vals[1]))+(0.83686))))+((vals[8])-(vals[3])))))+(0.184951))-(0.5122))+(((vals[8])/(vals[2]))+(vals[7])))*(((((vals[4])+(vals[9]))+((((sin(sin((sin(vals[2]))+((0.314387)*(vals[7])))))-((vals[6])*(0.344282)))/(sin(((sin((0.248513)+(vals[2])))-((vals[2])-(vals[1])))+((sin(vals[3]))-(vals[9])))))/(((0.875627)*((vals[4])/(0.491721)))+((sin((0.715198)-((vals[5])*(vals[5]))))*(sin(sin((vals[2])*(vals[2]))))))))+((0.47436)-(((((vals[3])-(vals[6]))+((0.717779)*(vals[5])))*(((((((((((0.913181)*(vals[7]))/((0.806022)-(vals[5])))*(sin((0.217984)+(vals[0]))))*(((0.687543)*(vals[9]))-(((0.275208)/(vals[2]))/((vals[1])/(0.913623)))))-(vals[5]))+((vals[3])*(vals[5])))-((-0.456806)-((vals[5])+(vals[3]))))/(0.830119))/(0.226725))*((0.00507328)-(vals[4]))))*((sin((vals[2])-(vals[2])))/(((vals[6])-(vals[4]))/((0.547019)/(vals[6])))))))+(((vals[7])+(0.232396))*((vals[6])/(0.328023)))))-(vals[2]))))-(0.542745)))*((vals[8])*((vals[6])/(vals[1]))))+(sin(sin(vals[0]))))+(((sin((vals[6])*(vals[2])))/((sin((((vals[5])/(vals[6]))*(0.316353))/(sin((vals[6])*(sin((((0.557163)-(vals[3]))-(-0.0104448))*(sin((0.0596972)-(vals[0])))))))))-(vals[5])))*(sin(((((((vals[2])*(0.885251))/(0.451026))-(-0.215412))+(sin(((vals[4])-(0.713215))/((vals[0])/(0.980824)))))+(1.57114))+((sin(vals[3]))/((vals[8])/(vals[5])))))))
	 return (res>0)?res:0;
}